#!/bin/bash

# Verify library installation
if [[ -z "$TAPEPACKAGER" ]]; then
    ORIG_PATH="$PWD"
    cd "$(dirname "$0")/../"
    export TAPEPACKAGER="$PWD"
    cd "$ORIG_PATH"
    echo -e "${YELLOW}Warning:${NC} The TAPEPACKAGER environment variable is not set."
    if [[ ! -d "$TAPEPACKAGER/lib" ]] || [[ ! -d "$TAPEPACKAGER/bin" ]]; then
        echo -e "${RED}Error:${NC} Auto setting the TAPEPACKAGER environment variable failed. Please set it manually."
        exit 1
    else
        echo -e "${YELLOW}Warning:${NC} Auto-corrected the TAPEPACKAGER environment variable: $TAPEPACKAGER"
    fi
fi


# Color profiles
source "$TAPEPACKAGER/lib/configurations/Color"

# Path Configurations
source "$TAPEPACKAGER/lib/configurations/Path"

# This will check if the given package name and version dependencies to whatever in the database.
# Usage: tape-dependencies.sh <database target name> <package name>
# Example: tape-dependencies.sh _ mypackage        # Check if any package is dependent to mypackage to root database
# Example: tape-dependencies.sh %TEMP% mypackage   # Check if any package is dependent to mypackage to temporary database

if [[ -z "$1" ]]; then
    echo -e "${RED}Error:${NC} No database target name given."
    exit 1
fi

if [[ -z "$2" ]]; then
    echo -e "${RED}Error:${NC} No package name and version given."
    exit 1
fi

# Locate database
if [[ "$1" == "%TEMP%" ]]; then
    # Temporary database
    DB="$TEMP"
else
    DB="$TAPEPACKAGER/lib/database/$1"
fi

# Check if database exists
if [[ ! -d "$DB" ]]; then
    echo -e "${RED}Error:${NC} The database $DB does not exist."
    exit 1
fi

# Get package name and version
package_name="$2"

# For each..
for package in $(find "$DB" -type d -mindepth 1 -maxdepth 1); do
    # Get package name
    # Check if package name matches
    if [[ "$1" == "%TEMP%" ]]; then
        METAPATH="$package/meta"
    else
        METAPATH="$package"
    fi

    installedPackageName="$(cat "$METAPATH/name")"

    if [[ ! -f "$METAPATH/dependencies" ]]; then
        continue
    fi

    
    for dependency in $(cat "$METAPATH/dependencies"); do

        if [[ -z "$dependency" ]]; then
            continue
        fi

        dependency="$(echo "$dependency" | awk -F "<=" '{print $1}')"
        dependency="$(echo "$dependency" | awk -F ">=" '{print $1}')"
        dependency="$(echo "$dependency" | awk -F "==" '{print $1}')"

        if [[ "$package_name" == "$dependency" ]]; then
            echo "$installedPackageName"
        fi
    done
done
