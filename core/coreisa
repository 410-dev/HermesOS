#!/bin/bash
function core.beginOSInterface() {
	mkdir -p "$CACHE/definitions"

	if [[ -d "$LIBRARY/definitions" ]]; then
		if [[ ! -z "$(ls "$LIBRARY/definitions/"*.hdp 2>/dev/null)" ]]; then
			verbose "[*] Found definition files in library."
			ls "$LIBRARY/definitions/"*.hdp | while read line
			do
				if [[ ! -z "$line" ]]; then
					verbose "[*] Uploading: $line"
					cp "$line" "$CACHE/definitions"
				fi
			done
		fi
	fi
	if [[ -d "$OSSERVICES/predefinitions" ]]; then
		if [[ ! -z "$(ls "$OSSERVICES/predefinitions/"*.hdp 2>/dev/null)" ]]; then
			verbose "[*] Found definition files in system."
			ls "$OSSERVICES/predefinitions/"*.hdp | while read line
			do
				if [[ ! -z "$line" ]]; then
					verbose "[*] Uploading: $line"
					cp "$line" "$CACHE/definitions"
				fi
			done
		fi
	fi
	if [[ -d "$OSSERVICES/definitions" ]]; then
		if [[ ! -z "$(ls "$OSSERVICES/definitions/"*.hdp 2>/dev/null)" ]]; then
			verbose "[*] Found definition files in system."
			ls "$OSSERVICES/definitions/"*.hdp | while read line
			do
				if [[ ! -z "$line" ]]; then
					verbose "[*] Uploading: $line"
					cp "$line" "$CACHE/definitions"
				fi
			done
		fi
	fi
	if [[ ! -z "$(ls "$CORE/definitions/"*.hdp 2>/dev/null)" ]]; then
		verbose "[*] Found definition files in core library."
		ls "$CORE/definitions/"*.hdp | while read line
		do
			if [[ ! -z "$line" ]]; then
				verbose "[*] Uploading: $line"
				cp "$line" "$CACHE/definitions"
			fi
		done
	fi
	export pwdd="$PWD"
	cd "$CACHE/definitions"
	if [[ -f *.hdp ]]; then
		for file in *.hdp
		do
			source "$file"
		done
	fi
	cd "$pwdd"
	export pwdd=""
	if [[ -f "$OSSERVICES/interface" ]]; then
		export exitcode="1"
		while [[ $exitcode -ne 0 ]] && [[ $exitcode -ne 100 ]]; do
			"$OSSERVICES/interface"
			exitcode="$?"
		done
		core.endSystem
	else
		echo "[-] OS Interface not found."
		echo "[-] Stopping core."
		core.endSystem
		export exitcode="0"
	fi
}

function core.endSystem() {
	verbose "[*] Loading lists of system level backgroundworkers..."
	ALIVE=$(ps -ax | grep "$OSSERVICES[/]backgroundworker")
	verbose "[*] Killing syncronously..."
	verbose "$ALIVE" | while read proc
	do
		if [[ ! -z "$proc" ]]; then
			frpid=($proc)
			kill -9 ${frpid[0]}
			verbose "[*] Killed PID: ${frpid[0]}"
		fi
	done
	verbose "[*] System background workers are closed."

	verbose "[*] Loading lists of core level backgroundworkers..."
	ALIVE=$(ps -ax | grep "$CORE/bgworkers[/]")
	verbose "[*] Killing syncronously..."
	verbose "$ALIVE" | while read proc
	do
		if [[ ! -z "$proc" ]]; then
			frpid=($proc)
			kill -9 ${frpid[0]}
			verbose "[*] Killed PID: ${frpid[0]}"
		fi
	done
	verbose "[*] Background workers are closed."
}

export -f core.beginOSInterface
export -f core.endSystem